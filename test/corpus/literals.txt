================================================================================
Integers
================================================================================

#let int = 1
#let int = 120

--------------------------------------------------------------------------------

(source_file
 (let_declaration
  (identifier)
  (int_literal))
 (let_declaration
  (identifier)
  (int_literal)))

================================================================================
Floats
================================================================================

#let float = 6.6
#let float = 1.1
#let float = 123.4123
#let float = 123.123
#let float = 1.3
#let float = 1.
#let float = 1e3
#let float = .3e14
#let float = 10.
#let float = .1
#let float = 123.4123E-10

--------------------------------------------------------------------------------

(source_file
 (let_declaration
  (identifier)
  (float_literal))
 (let_declaration
  (identifier)
  (float_literal))
 (let_declaration
  (identifier)
  (float_literal))
 (let_declaration
  (identifier)
  (float_literal))
 (let_declaration
  (identifier)
  (float_literal))
 (let_declaration
  (identifier)
  (float_literal))
 (let_declaration
  (identifier)
  (float_literal))
    (let_declaration
     (identifier)
     (float_literal))
    (let_declaration
     (identifier)
     (float_literal))
    (let_declaration
     (identifier)
     (float_literal))
    (let_declaration
     (identifier)
     (float_literal)))

================================================================================
Numbers
================================================================================

#let num = 1
#let num = 2
#let num = 3.5
#let num = 4
#let num = 1e+10

--------------------------------------------------------------------------------

(source_file
  (let_declaration
    (identifier)
    (int_literal))
  (let_declaration
    (identifier)
    (int_literal))
  (let_declaration
    (identifier)
    (float_literal))
  (let_declaration
    (identifier)
    (int_literal))
  (let_declaration
    (identifier)
    (float_literal)))

================================================================================
Numeric
================================================================================

#let numeric = 10cm
#let numeric = 0.5in
#let numeric = 360deg
#let numeric = 1.5rad
#let numeric = 1.4em
#let numeric = 1fr
#let numeric = 2e10pt
#let numeric = 1.5mm
#let numeric = 1.0510e-10%

--------------------------------------------------------------------------------

(source_file
  (let_declaration
    (identifier)
    (numeric
      (int_literal)
      (unit)))
  (let_declaration
    (identifier)
    (numeric
      (float_literal)
      (unit)))
  (let_declaration
    (identifier)
    (numeric
      (int_literal)
      (unit)))
  (let_declaration
    (identifier)
    (numeric
      (float_literal)
      (unit)))
  (let_declaration
    (identifier)
    (numeric
      (float_literal)
      (unit)))
  (let_declaration
    (identifier)
    (numeric
      (int_literal)
      (unit)))
  (let_declaration
    (identifier)
    (numeric
      (float_literal)
      (unit)))
  (let_declaration
    (identifier)
    (numeric
      (float_literal)
      (unit)))
  (let_declaration
    (identifier)
    (numeric
      (float_literal)
      (unit))))

================================================================================
Scientific Notation Floats
================================================================================

#let science = 1e322
#let science = 1e-3
#let science = 1e+3
#let science = 1.8e10
#let science = 1.e10
#let science = .1e14
#let science = 1e10

--------------------------------------------------------------------------------

(source_file
 (let_declaration
  (identifier)
  (float_literal))
 (let_declaration
  (identifier)
  (float_literal))
 (let_declaration
  (identifier)
  (float_literal))
 (let_declaration
  (identifier)
  (float_literal))
 (let_declaration
  (identifier)
  (float_literal))
 (let_declaration
  (identifier)
  (float_literal))
 (let_declaration
  (identifier)
  (float_literal)))

================================================================================
Strings
================================================================================

#let str = "hello"
#let str = "hello world"
#let str = "ðŸ˜—"
#let str = "unicode working!"

--------------------------------------------------------------------------------

(source_file
 (let_declaration
  (identifier)
  (string_literal))
 (let_declaration
  (identifier)
  (string_literal))
 (let_declaration
  (identifier)
   (string_literal))
 (let_declaration
  (identifier)
  (string_literal)))

================================================================================
Escape Sequences
================================================================================

#let what = "\t\r\n"
#let what = "\~"
#let what = "\@"
#let what = "\x12 \123 \u1234"

--------------------------------------------------------------------------------

(source_file
 (let_declaration
  (identifier)
  (string_literal
   (escape_sequence)
   (escape_sequence)
   (escape_sequence)))
 (let_declaration
  (identifier)
  (string_literal
   (escape_sequence)))
 (let_declaration
  (identifier)
  (string_literal
   (escape_sequence)))
 (let_declaration
  (identifier)
  (string_literal
   (escape_sequence)
   (escape_sequence))))

================================================================================
Other Literals
================================================================================

#let other = true
#let other = false
#let other = none

--------------------------------------------------------------------------------

(source_file
  (let_declaration
    (identifier)
    (boolean_literal))
  (let_declaration
    (identifier)
    (boolean_literal))
  (let_declaration
    (identifier)
    (none)))

================================================================================
Concatenated Strings
================================================================================

#let what = "one" + "two" + "three"

--------------------------------------------------------------------------------

(source_file
  (let_declaration
    (identifier)
    (binary_operator
      (binary_operator
        (string_literal)
        (string_literal))
      (string_literal))))

================================================================================
Type docs
================================================================================

#1
#none
#false \
#3.14 \
#rect(width: 20pt)
#rotate(10deg)[Hello there!]
#scale(x: 150%)[
  Scaled apart.
]
Left #h(1fr) Left-ish #h(2fr) Right
#"hello world!" \
#type([*Hello!*])
#rect(width: 100% - 50pt)

--------------------------------------------------------------------------------

(source_file
  (int_literal)
  (none)
  (boolean_literal)
  (line_break)
  (float_literal)
  (line_break)
  (function_call
    (identifier)
    (arguments
      (asssigned_argument
        (identifier)
        (numeric
          (int_literal)
          (unit)))))
  (function_call
    (identifier)
    (arguments
      (argument
        (numeric
          (int_literal)
          (unit)))
      (content_block)))
  (function_call
    (identifier)
    (arguments
      (asssigned_argument
        (identifier)
        (numeric
          (int_literal)
          (unit)))
      (content_block)))
  (function_call
    (identifier)
    (arguments
      (argument
        (numeric
          (int_literal)
          (unit)))))
  (function_call
    (identifier)
    (arguments
      (argument
        (numeric
          (int_literal)
          (unit)))))
  (string_literal)
  (line_break)
  (function_call
    (identifier)
    (arguments
      (argument
        (content_block))))
  (function_call
    (identifier)
    (arguments
      (asssigned_argument
        (identifier)
        (binary_operator
          (numeric
            (int_literal)
            (unit))
          (numeric
            (int_literal)
            (unit)))))))

================================================================================
Unicode
================================================================================

This should all parse correctly.

âœŠ
ðŸ‘Š
ðŸ‘Œ

--------------------------------------------------------------------------------

(source_file
  (paragraph_break))
